<script type="text/javascript">
    var Explain = {

        _t : null,
        _m : ['text','html'],
        _c : ['ex','in','rx'],

        init : function(i){
            this._t = document.getElementById('explain');
            var m = this._readMode();
            this.mode(m);
            if(m != 'html')
                return;
            var c = this._readColumn();
            this.mark(c);
        },

        mode : function(m){
            for(var i=0;i<this._m.length;i++){
                try{ 
                    document.getElementById(this._m[i]).style.display = (this._m[i] == m ? 'block' : 'none'); 
                }catch(e){}
            }
        },

        mark : function(cn){
            var bs = this._t.getElementsByTagName('tbody');
            var vi = -1;

            for(var i=0;i<this._c.length;i++){
                if(this._c[i] == cn){
                    vi = i;
                    break;
                }
            }

            if(vi < 0) return;
            
            for(var i=0;i<bs.length;i++){
                var rs = bs[i].getElementsByTagName('tr');
                for(var j=0;j<rs.length;j++){
                    var rl = rs[j].getAttribute('rel');
                    if(!rl)
                        continue;
                    if(!(rl.match(/^\d+(;\d+)*$/g)))
                        continue;
                    var cs = rl.split(';');
                    if((cs.lenght - 1) < vi)
                        continue;
                    rs[j].className = cn + '-' + cs[vi];
                }
            }
        },

        highlight : function ( row, state ) {
            var rs = row.parentNode.getElementsByTagName( 'tr' );
            var pl = parseInt( new String( row.getAttribute( 'rel' ) ).replace( /^.*;/, '' ) );
            var sm = false;
            for( var i = 0 ; i < rs.length ; i++ ) {
                if ( rs[ i ] == row ) {
                    sm = true;
                    continue;
                }
                if ( sm ) {
                    var cl = parseInt( new String( rs[ i ].getAttribute( 'rel' ) ).replace( /.*;/, '' ) );
                    if ( cl <= pl )
                        break;
                    if ( state && cl == pl + 1 ) rs[ i ].className += ' highlight';
                    if ( !state ) rs[ i ].className = new String( rs[ i ].className ).replace( /\s+highlight/, '' );
                }
            }
            return;
        },

        collapse : function ( row ) {
            var ci = new String( row.className ).indexOf( 'collapsed' );
            var cs = '';
            if ( ci > -1 ) {
                row.className = new String( row.className ).replace( /\s+collapsed/i, '' );
                cs = '';
            } else {
                row.className += ' collapsed';
                cs = 'none';
            }
            var rs = row.parentNode.getElementsByTagName( 'tr' );
            var pl = parseInt( new String( row.getAttribute( 'rel' ) ).replace( /^.*;/, '' ) );
            var sm = false;
            for( var i = 0 ; i < rs.length ; i++ ) {
                if ( rs[ i ] == row ) {
                    sm = true;
                    continue;
                }
                if ( sm ) {
                    var cl = parseInt( new String( rs[ i ].getAttribute( 'rel' ) ).replace( /.*;/, '' ) );
                    if ( cl <= pl )
                        break;
                    rs[ i ].style.display = cs;
                    rs[ i ].className = new String( rs[ i ].className ).replace( /\s+collapsed/i, '' );
                }
            }
            return;
        },

        _readMode : function(){
            return (new String(window.location.href).match(/#text/) ? 'text' : 'html');
        },

        _readColumn : function(){
            var c = new String(window.location.href).replace(/.*#/, '');
            for(var i=0;i<this._c.length;i++){
                if(c == this._c[i])
                    return c;
            }
            return this._c[0];
        }
    };
</script>
