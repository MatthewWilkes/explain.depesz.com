% layout 'default';

% my $title = stash( 'id' );
% title $title;


% my @cookie = grep { $_->name eq 'explain' } @{ $self->req->cookies };
% my $cookie = scalar @cookie ? b( $cookie[0]->value )->url_unescape : '';
%
% my @cfg = split /\|/, $cookie || 'ce=1|ci=1|cx=1|ve=1|vi=1|vx=1|vr=1|vl=1';
% my $cfg = {};
%
% for ( @cfg ) {
%   next unless $_ =~ /\A(ce|ci|cx|ve|vi|vx|vr|vl)\=(0|1)\z/;
%   $cfg->{ $1 } = $2;
% }


% my $row = 0;
%
% my $row_class = begin
%   my $class = shift;
%
%   my $next  = scalar( @_ ) ? shift : 1;
%
%   ++$row if $next;
%
%   return sprintf '%s %s', $class, $row % 2 ? 'odd' : 'even';
% end;


% my $block = undef;
%
% $block = begin
%
%   my ( $node, $level ) = @_;
%
%   $level ||= 0;
%
%   my $exclusive_point = 1;
%   my $inclusive_point = 1;
%
%   if ( $explain->top_node->total_inclusive_time && $node->total_exclusive_time ne '' && $node->total_inclusive_time ne '' ) {
%
%       $exclusive_point = $node->total_exclusive_time / $explain->top_node->total_inclusive_time;
%
%          if ( $exclusive_point > 0.9 ) { $exclusive_point = 4; }
%       elsif ( $exclusive_point > 0.5 ) { $exclusive_point = 3; }
%       elsif ( $exclusive_point > 0.1 ) { $exclusive_point = 2; }
%       else                             { $exclusive_point = 1; }
%
%       $inclusive_point = $node->total_inclusive_time / $explain->top_node->total_inclusive_time;
%
%          if ( $inclusive_point > 0.9 ) { $inclusive_point = 4; }
%       elsif ( $inclusive_point > 0.5 ) { $inclusive_point = 3; }
%       elsif ( $inclusive_point > 0.1 ) { $inclusive_point = 2; }
%       else                             { $inclusive_point = 1; }
%   }
%
%   my $rows_x       = 0;
%   my $rows_x_mark  = '';
%   my $rows_x_point = 1;
%
%   if ( $node->estimated_rows && $node->actual_rows ) {
%
%       if ( $node->actual_rows > $node->estimated_rows ) {
%           $rows_x      = $node->actual_rows / $node->estimated_rows;
%           $rows_x_mark = 'down';
%       } else {
%           $rows_x      = $node->estimated_rows / $node->actual_rows;
%           $rows_x_mark = 'up';
%       }
%
%          if ( $rows_x > 1000 ) { $rows_x_point = 4; }
%       elsif ( $rows_x > 100  ) { $rows_x_point = 3; }
%       elsif ( $rows_x > 10   ) { $rows_x_point = 2; }
%       else                     { $rows_x_point = 1; }
%   }

%#  tr class="(n|ip|sp) (even|odd) c-(mix|1|2|3|4)"
%#  means:
%#      n(ode)/i(nit)p(lan)/s(ub)p(lan)
%#      c(olor)-mix(ed)|1|2|3|4
%#
%#  td class="(e|i|x|r|l|n) (c-(1|2|3|4))?"
%#  means:
%#      e(xclusive time)/i(nclusive time)/(rows-)x/r(ows)/l(oops)/n(ode)
%#      c(olor)-1|2|3|4
%#
%#  important!
%#  content of td.r(ows)/td.l(oops) must be wrapped in "span" element (because Opera...)

% my $margin = ( $level + 1 ) * 22;

    <tr class="<%= $row_class->( 'n c-mix' ) =%>" data-level="<%= $level =%>" data-e="<%= $exclusive_point =%>" data-i="<%= $inclusive_point =%>" data-x="<%= $rows_x_point =%>">
        <td class="e c-<%= $exclusive_point =%>">
            <span><%= sprintf '%.3f', $node->total_exclusive_time =%></span>
        </td>
        <td class="i c-<%= $inclusive_point =%>">
            <span><%= sprintf '%.3f', $node->total_inclusive_time =%></span>
        </td>
        <td class="x c-<%= $rows_x_point =%>">
            <span>
                <%== $rows_x_mark eq 'up' ? '&uarr;' : '&darr;' %>
                <%= sprintf '%.1f', $rows_x %>
            </span>
        </td>
        <td class="r<%= $cfg->{ vr } ? '' : ' tight' %>"><span><%= $node->actual_rows  =%></span></td>
        <td class="l<%= $cfg->{ vl } ? '' : ' tight' %>"><span><%= $node->actual_loops =%></span></td>
        <td class="n">
            <div class="n" style="margin-left:<%= $margin =%>px">

                <div class="ico">&rarr;</div>

                <p>
                    <span class="node">

                        <%= $node->type %>

                        % if ( 'Bitmap Heap Scan' eq $node->type ) {
                            on <%= $node->scan_on->{ table_name } %> <%= $node->scan_on->{ table_alias } || '' %>
                        % }
                        % elsif ( 'Bitmap Index Scan' eq $node->type ) {
                            on <%= $node->scan_on->{ index_name } %>
                        % }
                        % elsif ( 'Index Scan' eq $node->type ) {
                            using <%= $node->scan_on->{ index_name } %> on <%= $node->scan_on->{ table_name } %> <%= $node->scan_on->{ table_alias } || '' %>
                        % }
                        % elsif ( 'Seq Scan' eq $node->type ) {
                            on <%= $node->scan_on->{ table_name } %> <%= $node->scan_on->{ table_alias } || '' %>
                        % }

                    </span>

                    <span class="est">
                        (cost=<%= $node->estimated_startup_cost =%>..<%= $node->estimated_total_cost %>
                        rows=<%= $node->estimated_rows %>
                        width=<%= $node->estimated_row_width =%>)
                    </span>

                    <span class="act">
                        (actual
                        time=<%= $node->actual_time_first =%>..<%= $node->actual_time_last %>
                        rows=<%= $node->actual_rows %>
                        loops=<%= $node->actual_loops =%>)
                    </span>
                </p>

                % if ( $node->extra_info ) {
                    <ul class="ex-nfo">
                        % for my $line ( @{ $node->extra_info } ) {
                            <li><%= $line =%></li>
                        % }
                    </ul>
                % }

            </div>
        </td>
    </tr>

    % if ( $node->initplans ) {

        <tr class="<%= $row_class->( 'ip' ) %>" data-level="<%= $level =%>">
            <td class="e"><span>&nbsp;</span></td>
            <td class="i"><span>&nbsp;</span></td>
            <td class="x"><span>&nbsp;</span></td>
            <td class="r"><span>&nbsp;</span></td>
            <td class="l"><span>&nbsp;</span></td>
            <td class="n">
                <div class="n" style="margin-left:<%= $margin =%>px">
                    <p><span>Initplan (for <%= $node->type =%>)</span></p>
                </div>
            </td>
        </tr>

        % for ( @{ $node->initplans } ) {
            %== $block->( $_, $level + 1 );
        % }
    % }

    % if ( $node->sub_nodes ) {
        % for ( @{ $node->sub_nodes } ) {
            %== $block->( $_, $level + 1 );
        % }
    % }

    % if ( $node->subplans ) {

        <tr class="<%= $row_class->( 'sp' ) %>" data-level="<%= $level =%>">
            <td class="e"><span>&nbsp;</span></td>
            <td class="i"><span>&nbsp;</span></td>
            <td class="x"><span>&nbsp;</span></td>
            <td class="r"><span>&nbsp;</span></td>
            <td class="l"><span>&nbsp;</span></td>
            <td class="n">
                <div class="n" style="margin-left:<%= $margin =%>px">
                    <p><span>SubPlan (for <%= $node->type =%>)</span></p>
                </div>
            </td>
        </tr>

        % for ( @{ $node->subplans } ) {
            %== $block->( $_, $level + 1 );
        % }
    % }

% end;


<h1>Results <small>(<%= $title =%>)</small></h1>


<form id="explain-form" method="get" action="<%= url_for 'current' %>">
    <h3>Colorize</h3>
    <ul>
        <li>
            <input type="checkbox" name="ce" id="ce" value="1"<%= $cfg->{ ce } ? ' checked="checked"' : '' %> />
            <label for="ce">exclusive</label>
        </li>
        <li>
            <input type="checkbox" name="ci" id="ci" value="1"<%= $cfg->{ ci } ? ' checked="checked"' : '' %> />
            <label for="ci">inclusive</label>
        </li>
        <li>
            <input type="checkbox" name="cx" id="cx" value="1"<%= $cfg->{ cx } ? ' checked="checked"' : '' %> />
            <label for="cx">rows x</label>
        </li>
    </ul>
    <h3>Columns visibility</h3>
    <ul>
        <li>
            <input type="checkbox" name="ve" id="ve" value="1"<%= $cfg->{ ve } ? ' checked="checked"' : '' %> />
            <label for="ve">exclusive</label>
        </li>
        <li>
            <input type="checkbox" name="vi" id="vi" value="1"<%= $cfg->{ vi } ? ' checked="checked"' : '' %> />
            <label for="vi">inclusive</label>
        </li>
        <li>
            <input type="checkbox" name="vx" id="vx" value="1"<%= $cfg->{ vx } ? ' checked="checked"' : '' %> />
            <label for="vx">rows x</label>
        </li>
        <li>
            <input type="checkbox" name="vr" id="vr" value="1"<%= $cfg->{ vr } ? ' checked="checked"' : '' %> />
            <label for="vr">rows</label>
        </li>
        <li>
            <input type="checkbox" name="vl" id="vl" value="1"<%= $cfg->{ vl } ? ' checked="checked"' : '' %> />
            <label for="vl">loops</label>
        </li>
    </ul>
    <button type="submit" name="save-settings" id="save-settings">Save settings</button>
</form>


<!--
    result
    important! class "result" is also used in explain.js
-->
<div class="result">

    <div class="tabs">
        <ul class="clearfix">
            <li class="html">
                <a href="#html"
                   title="view HTML"
                   class="current"
                   onclick="$( this ).explain( 'toggleView', 'html', this ); return false;"
                   onkeypress="return this.onclick( );">HTML</a>
            </li>
            <li class="text">
                <a href="#text"
                   title="view plain text"
                   onclick="$( this ).explain( 'toggleView', 'text', this ); return false;"
                   onkeypress="return this.onclick( );">TEXT</a>
            </li>
        </ul>
    </div>

    <!--
        HTML view
        important! class "result-html" is also used in explain.js
    -->
    <div class="result-html">
        <table id="explain">
            <thead>
                <tr>
                    <th class="e">
                        <a href="#colorize-exclusive"
                            title="colorize rows based on &quot;exclusive&quot;"
                            onclick="$( this ).explain( 'colorize', 'e' ); return false"
                            onkeypress="return this.onclick( );">exclusive</a>
                    </th>
                    <th class="i">
                        <a href="#colorize-inclusive"
                            title="colorize rows based on &quot;inclusive&quot;"
                            onclick="$( this ).explain( 'colorize', 'i' ); return false"
                            onkeypress="return this.onclick( );">inclusive</a>
                    </th>
                    <th class="x">
                        <a href="#colorize-rows-x"
                            title="colorize rows based on &quot;rows x&quot;"
                            onclick="$( this ).explain( 'colorize', 'x' ); return false"
                            onkeypress="return this.onclick( );">rows x</a>
                    </th>
                    <th class="r<%= $cfg->{ vr } ? '' : ' tight' %>">
                        <span>rows</span>
                    </th>
                    <th class="l<%= $cfg->{ vl } ? '' : ' tight' %>">
                        <span>loops</span>
                    </th>
                    <th class="n">
                        <span>node</span>
                    </th>
                </tr>
            </thead>
            <tbody>
                %== $block->( $explain->top_node );
            </tbody>
        </table>
    </div>

    <!--
        TEXT view
        important! class "result-text" is also used in explain.js
    -->
    <div class="result-text hidden">
        <pre id="source"><%= $explain->source =%></pre>
    </div>

</div>

<% content_for 'head' => begin %>
    <script>
        $( document ).ready( function( ) {

            /* startup */
            $.fn.explain( 'init', $( '#explain-form' ), $( '#explain' ) );

        } );
    </script>
<% end %>
